from pwn import *
import random
import json
# public numbers from server
prime_p = 136062877477772021443963986821466822423928306636725705955189295265171531194630539497933022412421177627488716473227275120023271715397034546804175879349877168981582602251424924699340785448683074807806407936267383798949594772365085169340683942944085482956202789355681500477966677233789310292180313638378062381719
prime_q = 68031438738886010721981993410733411211964153318362852977594647632585765597315269748966511206210588813744358236613637560011635857698517273402087939674938584490791301125712462349670392724341537403903203968133691899474797386182542584670341971472042741478101394677840750238983338616894655146090156819189031190859
generator = 68695322546411990097618816719880607069395444393834268960741680054974511660271970026150039567236118658479679444015844573677880347686810169165388385685914903968147097279757787122753390447954112451193808647256026282821032909814441591222220915875289906762225085266354556177943238500761050758957943922408034634359

# from pcap, reused nonce -> x value is the same in two distinct exchanges
c1 = 6907040365749062764317234217212422760524293244268304044031267814375261726518819840872897010542061586180338946854198843263861113247308971988482194577300481
y1 = 47301471274764375027233887018467728683212544868180756952714060002384918336097981906635328550573455109083964896078204894063770138869228110438022597677444300963125107449271062804661686094888943554658696589438787857489145884313095468134307502842497250952580574817118401510469090083341431585332513340447935780383

c2 = 10054716286147221569070550844727663280137451405566503568858945801163990865600086737817860509170224092387512941840349786798810861764262870491689830587793118
y2 = 61315520129932713547742197638969489240512180282874199019936219246032791390014148208853665735170330386158172470373806727791843518559512332418196126755814944919158623019833119706753014427366507563903108237493712869456132576844296063476606800371427276391193298255128131258458561302168331000741858500496764944462

x1 = y1 - y2
x2 = c1 - c2

# x1 / x2 (mod q) = x1 * (x2**(-1)) (mod q)
privkey = (x1 * pow(x2,-1,prime_q)) % prime_q

r = random.randrange(prime_q-1)

conn = remote("localhost",2438)
challenge = json.loads(conn.readline())["c"]
x = pow(generator,r,prime_p)
y = (r + privkey*challenge) % prime_q
proof = {'x' : x, 'y' : y }
proof = json.dumps(proof)
conn.sendline(proof)
print(conn.recvuntil(b"}"))
conn.close()
